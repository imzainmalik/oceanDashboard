<?php

namespace App\Models {

	/**
	 * App\Models\BillPayment
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $is_deleted
	 * @property string|null $owner_remarks
	 * @property mixed $status
	 * @property string|null $note
	 * @property mixed $type
	 * @property string $receipt_path
	 * @property string $confirmation_number
	 * @property string $payment_method
	 * @property float $amount_paid
	 * @property mixed $payer_id
	 * @property mixed $bills_id
	 * @property int $id
	 * @property-read \App\Models\Bills $bill
	 * @property-read \App\Models\User $payer
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereBillsId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment wherePayerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereAmountPaid($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment wherePaymentMethod($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereConfirmationNumber($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereReceiptPath($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereNote($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereOwnerRemarks($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereIsDeleted($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<BillPayment>|BillPayment query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class BillPayment extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Bills
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $status
	 * @property mixed $type
	 * @property string $payment_method
	 * @property float $amount
	 * @property string $details
	 * @property string $title
	 * @property mixed $assigned_to
	 * @property mixed $owner_id
	 * @property int $id
	 * @property-read \App\Models\User $owner
	 * @property-read \App\Models\User $assignee
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\BillPayment> $payments
	 * @property-read int|null $payments_count
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereAssignedTo($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereDetails($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereAmount($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills wherePaymentMethod($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Bills>|Bills query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Bills extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\ChatRoom
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $room_id
	 * @property mixed $family_owner_id
	 * @property int $id
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom whereRoomId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<ChatRoom>|ChatRoom query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class ChatRoom extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Contributions
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $is_deleted
	 * @property string|null $note
	 * @property string $type
	 * @property float $amount
	 * @property mixed $bill_id
	 * @property mixed $family_member_id
	 * @property mixed $family_owner_id
	 * @property int $id
	 * @property-read \App\Models\User $familyMember
	 * @property-read \App\Models\Bills $bill
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereFamilyMemberId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereBillId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereAmount($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereNote($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereIsDeleted($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Contributions>|Contributions query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Contributions extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\DocumentRequest
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $type
	 * @property mixed $document_id
	 * @property mixed $status
	 * @property \Illuminate\Support\Carbon $expires_at
	 * @property string|null $message
	 * @property string $title
	 * @property mixed $target_user_id
	 * @property mixed $requester_id
	 * @property mixed $family_owner_id
	 * @property int $id
	 * @property-read \App\Models\User $requester
	 * @property-read \App\Models\User $target
	 * @property-read \App\Models\EmergencyDocument $document
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereRequesterId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereTargetUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereMessage($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereExpiresAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereDocumentId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequest>|DocumentRequest query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class DocumentRequest extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\DocumentRequestResponse
	 *
	 * @property-read \App\Models\DocumentRequest $request
	 * @property-read \App\Models\User $uploader
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequestResponse>|DocumentRequestResponse newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequestResponse>|DocumentRequestResponse newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<DocumentRequestResponse>|DocumentRequestResponse query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class DocumentRequestResponse extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\EmergencyDocument
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property boolean $is_private
	 * @property mixed $size
	 * @property string|null $mime
	 * @property string $disk_path
	 * @property string $original_name
	 * @property mixed $uploader_id
	 * @property int $id
	 * @property-read \App\Models\User $uploader
	 * @property-read \App\Models\Senior $senior
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereUploaderId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereOriginalName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereDiskPath($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereMime($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereSize($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereIsPrivate($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<EmergencyDocument>|EmergencyDocument query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class EmergencyDocument extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Event
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string|null $end_date
	 * @property string $start_date
	 * @property string|null $description
	 * @property mixed $type
	 * @property int $id
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\User> $participants
	 * @property-read int|null $participants_count
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereDescription($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereStartDate($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereEndDate($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Event>|Event query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Event extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\FamilyNote
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $visibility
	 * @property mixed $type
	 * @property string $content
	 * @property string $title
	 * @property mixed $family_member_id
	 * @property mixed $family_owner_id
	 * @property int $id
	 * @property-read \App\Models\FamilyOwner $familyOwner
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereFamilyMemberId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereContent($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereVisibility($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyNote>|FamilyNote query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class FamilyNote extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\FamilyOwner
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $primary_senior_id
	 * @property mixed $owner_id
	 * @property mixed $plan
	 * @property string $name
	 * @property int $id
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner whereName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner wherePlan($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner whereOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner wherePrimarySeniorId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<FamilyOwner>|FamilyOwner query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class FamilyOwner extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Meeting
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $is_active
	 * @property mixed $is_deleted
	 * @property mixed $status
	 * @property string|null $start_url
	 * @property string|null $join_url
	 * @property string|null $zoom_meeting_id
	 * @property mixed $duration
	 * @property string $start_time
	 * @property string|null $agenda
	 * @property string $topic
	 * @property mixed $created_by
	 * @property mixed $senior_id
	 * @property int $id
	 * @property-read \App\Models\Senior $senior
	 * @property-read \App\Models\User $creator
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereSeniorId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereCreatedBy($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereTopic($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereAgenda($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereStartTime($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereDuration($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereZoomMeetingId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereJoinUrl($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereStartUrl($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereIsDeleted($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereIsActive($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Meeting>|Meeting query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Meeting extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Message
	 *
	 * @method static \Illuminate\Database\Eloquent\Builder<Message>|Message newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Message>|Message newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Message>|Message query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Message extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\PaymentMethod
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string|null $gateway_token
	 * @property bool $is_primary
	 * @property string $expiry_year
	 * @property string $expiry_month
	 * @property string $card_brand
	 * @property string $card_last_four
	 * @property mixed $family_owner_id
	 * @property int $id
	 * @property-read \App\Models\FamilyOwner $familyOwner
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereCardLastFour($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereCardBrand($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereExpiryMonth($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereExpiryYear($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereIsPrimary($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereGatewayToken($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<PaymentMethod>|PaymentMethod query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class PaymentMethod extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Permission
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $feature_name
	 * @property mixed $user_id
	 * @property int $id
	 * @property-read \App\Models\User $user
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission whereFeatureName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Permission>|Permission query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Permission extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Pool
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $is_deleted
	 * @property string|null $final_decision_notes
	 * @property mixed $final_decision_by
	 * @property \Illuminate\Support\Carbon|null $voting_expires_at
	 * @property mixed $status
	 * @property string|null $description
	 * @property string $title
	 * @property mixed $owner_id
	 * @property int $id
	 * @property-read \App\Models\User $owner
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\PoolVoting> $votings
	 * @property-read int|null $votings_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\VotingComment> $comments
	 * @property-read int|null $comments_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\User> $voters
	 * @property-read int|null $voters_count
	 * @property-read \App\Models\User $finalDecisionBy
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\PoolVoting> $votes
	 * @property-read int|null $votes_count
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereDescription($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereVotingExpiresAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereFinalDecisionBy($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereFinalDecisionNotes($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereIsDeleted($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Pool>|Pool query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Pool extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\PoolVoting
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string|null $comment
	 * @property mixed $choice
	 * @property mixed $user_id
	 * @property mixed $pool_id
	 * @property int $id
	 * @property-read \App\Models\Pool $pool
	 * @property-read \App\Models\User $user
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\VotingComment> $replies
	 * @property-read int|null $replies_count
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting wherePoolId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting whereChoice($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting whereComment($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<PoolVoting>|PoolVoting query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class PoolVoting extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Reimbursement
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $status
	 * @property string|null $reason
	 * @property float $amount
	 * @property mixed $bill_id
	 * @property mixed $family_member_id
	 * @property int $id
	 * @property-read \App\Models\User $familyMember
	 * @property-read \App\Models\Bills $bill
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereFamilyMemberId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereBillId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereAmount($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereReason($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Reimbursement>|Reimbursement query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Reimbursement extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Role
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $name
	 * @property int $id
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\User> $users
	 * @property-read int|null $users_count
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role whereName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Role>|Role query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Role extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Senior
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property bool $has_alzheimer
	 * @property bool $has_dementia
	 * @property string|null $emergency_contact_phone
	 * @property string|null $emergency_contact_name
	 * @property string|null $primary_doctor
	 * @property string|null $medical_condition
	 * @property string|null $gender
	 * @property string $blood_type
	 * @property string|null $dob
	 * @property mixed $family_owner_id
	 * @property mixed $user_id
	 * @property int $id
	 * @property-read \App\Models\User $user
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereDob($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereBloodType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereGender($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereMedicalCondition($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior wherePrimaryDoctor($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereEmergencyContactName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereEmergencyContactPhone($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereHasDementia($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereHasAlzheimer($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Senior>|Senior query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Senior extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Subscription
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string|null $ends_at
	 * @property string|null $trial_ends_at
	 * @property mixed $price
	 * @property mixed $quantity
	 * @property string|null $stripe_price
	 * @property string $stripe_status
	 * @property string $stripe_id
	 * @property string $type
	 * @property string $stripe_user_id
	 * @property mixed $user_id
	 * @property int $id
	 * @property-read \App\Models\FamilyOwner $familyOwner
	 * @property-read \App\Models\PaymentMethod $paymentMethod
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereStripeUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereStripeId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereStripeStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereStripePrice($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereQuantity($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription wherePrice($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereTrialEndsAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereEndsAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Subscription>|Subscription query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Subscription extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Task
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $is_deleted
	 * @property mixed $status
	 * @property string|null $details
	 * @property mixed $type
	 * @property string $title
	 * @property mixed $assignee_id
	 * @property mixed $owner_id
	 * @property int $id
	 * @property-read \App\Models\User $owner
	 * @property-read \App\Models\User $assignee
	 * @property-read \App\Models\User $user
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\TaskComment> $comments
	 * @property-read int|null $comments_count
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereAssigneeId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereDetails($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereIsDeleted($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Task>|Task query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Task extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\TaskComment
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $message
	 * @property mixed $parent_id
	 * @property mixed $user_id
	 * @property mixed $task_id
	 * @property int $id
	 * @property-read \App\Models\Task $task
	 * @property-read \App\Models\User $user
	 * @property-read \App\Models\TaskComment $parent
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\TaskComment> $replies
	 * @property-read int|null $replies_count
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereTaskId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereParentId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereMessage($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<TaskComment>|TaskComment query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class TaskComment extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\Tenant
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $child_id
	 * @property mixed $owner_has_child
	 * @property mixed $owner_id
	 * @property int $id
	 * @property-read \App\Models\User $users
	 * @property-read \App\Models\User $owner
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant whereOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant whereOwnerHasChild($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant whereChildId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Tenant>|Tenant query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Tenant extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\TimelineLog
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $action_desc
	 * @property string $action_name
	 * @property string $name
	 * @property mixed $family_owner_id
	 * @property int $id
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereFamilyOwnerId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereActionName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereActionDesc($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<TimelineLog>|TimelineLog query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class TimelineLog extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\User
	 *
	 * @property string|null $trial_ends_at
	 * @property string|null $pm_last_four
	 * @property string|null $pm_type
	 * @property string|null $stripe_id
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string|null $remember_token
	 * @property mixed $account_status
	 * @property string $password
	 * @property \Illuminate\Support\Carbon|null $email_verified_at
	 * @property string $email
	 * @property string $d_pic
	 * @property string $name
	 * @property mixed $role_id
	 * @property int $id
	 * @property-read mixed $custom_role
	 * @property-read \App\Models\Role $role
	 * @property-read \App\Models\Tenant $tenant
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\Task> $tasks
	 * @property-read int|null $tasks_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\Permission> $permissions
	 * @property-read int|null $permissions_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\PoolVoting> $poolVotings
	 * @property-read int|null $poolVotings_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\Pool> $pools
	 * @property-read int|null $pools_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\VotingComment> $votingComments
	 * @property-read int|null $votingComments_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\Vacation> $vacations
	 * @property-read int|null $vacations_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \Illuminate\Notifications\DatabaseNotification> $notifications
	 * @property-read int|null $notifications_count
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \Laravel\Cashier\Subscription> $subscriptions
	 * @property-read int|null $subscriptions_count
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereRoleId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereName($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereDPic($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereEmail($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereEmailVerifiedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User wherePassword($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereAccountStatus($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereRememberToken($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereStripeId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User wherePmType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User wherePmLastFour($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User whereTrialEndsAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User onGenericTrial()
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User hasExpiredGenericTrial()
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<User>|User query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class User extends \Illuminate\Foundation\Auth\User
	{
		//
	}

	/**
	 * App\Models\Vacation
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $type
	 * @property string|null $end_date
	 * @property string $start_date
	 * @property string|null $description
	 * @property string $title
	 * @property int $id
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\User> $users
	 * @property-read int|null $users_count
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereDescription($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereStartDate($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereEndDate($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereType($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<Vacation>|Vacation query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class Vacation extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\VacationUser
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property mixed $user_id
	 * @property mixed $vacation_id
	 * @property int $id
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser whereVacationId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<VacationUser>|VacationUser query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class VacationUser extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\VoiceJournal
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string|null $transcription
	 * @property string $file_path
	 * @property string|null $title
	 * @property mixed $created_by
	 * @property mixed $senior_id
	 * @property int $id
	 * @property-read \App\Models\Senior $senior
	 * @property-read \App\Models\User $creator
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereSeniorId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereCreatedBy($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereTitle($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereFilePath($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereTranscription($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<VoiceJournal>|VoiceJournal query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class VoiceJournal extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

	/**
	 * App\Models\VotingComment
	 *
	 * @property \Illuminate\Support\Carbon|null $updated_at
	 * @property \Illuminate\Support\Carbon|null $created_at
	 * @property string $message
	 * @property mixed $parent_id
	 * @property mixed $user_id
	 * @property mixed $pool_id
	 * @property int $id
	 * @property-read \App\Models\Pool $pool
	 * @property-read \App\Models\User $user
	 * @property-read \Illuminate\Database\Eloquent\Collection<int, \App\Models\VotingComment> $replies
	 * @property-read int|null $replies_count
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment whereId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment wherePoolId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment whereUserId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment whereParentId($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment whereMessage($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment whereCreatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment whereUpdatedAt($value)
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment newModelQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment newQuery()
	 * @method static \Illuminate\Database\Eloquent\Builder<VotingComment>|VotingComment query()
	 * @method static mixed select($columns)
	 * @method static mixed selectSub($query, $as)
	 * @method static mixed selectRaw($expression, array $bindings)
	 * @method static mixed fromSub($query, $as)
	 * @method static mixed fromRaw($expression, $bindings)
	 * @method static mixed createSub($query)
	 * @method static mixed parseSub($query)
	 * @method static mixed prependDatabaseNameIfCrossDatabaseQuery($query)
	 * @method static mixed addSelect($column)
	 * @method static mixed distinct()
	 * @method static mixed from($table, $as)
	 * @method static mixed useIndex($index)
	 * @method static mixed forceIndex($index)
	 * @method static mixed ignoreIndex($index)
	 * @method static mixed join($table, $first, $operator, $second, $type, $where)
	 * @method static mixed joinWhere($table, $first, $operator, $second, $type)
	 * @method static mixed joinSub($query, $as, $first, $operator, $second, $type, $where)
	 * @method static mixed joinLateral($query, string $as, string $type)
	 * @method static mixed leftJoinLateral($query, string $as)
	 * @method static mixed leftJoin($table, $first, $operator, $second)
	 * @method static mixed leftJoinWhere($table, $first, $operator, $second)
	 * @method static mixed leftJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed rightJoin($table, $first, $operator, $second)
	 * @method static mixed rightJoinWhere($table, $first, $operator, $second)
	 * @method static mixed rightJoinSub($query, $as, $first, $operator, $second)
	 * @method static mixed crossJoin($table, $first, $operator, $second)
	 * @method static mixed crossJoinSub($query, $as)
	 * @method static mixed newJoinClause(self $parentQuery, $type, $table)
	 * @method static mixed newJoinLateralClause(self $parentQuery, $type, $table)
	 * @method static mixed mergeWheres($wheres, $bindings)
	 * @method static mixed where($column, $operator, $value, $boolean)
	 * @method static mixed addArrayOfWheres($column, $boolean, $method)
	 * @method static mixed prepareValueAndOperator($value, $operator, $useDefault)
	 * @method static mixed invalidOperatorAndValue($operator, $value)
	 * @method static mixed invalidOperator($operator)
	 * @method static mixed isBitwiseOperator($operator)
	 * @method static mixed orWhere($column, $operator, $value)
	 * @method static mixed whereNot($column, $operator, $value, $boolean)
	 * @method static mixed orWhereNot($column, $operator, $value)
	 * @method static mixed whereColumn($first, $operator, $second, $boolean)
	 * @method static mixed orWhereColumn($first, $operator, $second)
	 * @method static mixed whereRaw($sql, $bindings, $boolean)
	 * @method static mixed orWhereRaw($sql, $bindings)
	 * @method static mixed whereLike($column, $value, $caseSensitive, $boolean, $not)
	 * @method static mixed orWhereLike($column, $value, $caseSensitive)
	 * @method static mixed whereNotLike($column, $value, $caseSensitive, $boolean)
	 * @method static mixed orWhereNotLike($column, $value, $caseSensitive)
	 * @method static mixed whereIn($column, $values, $boolean, $not)
	 * @method static mixed orWhereIn($column, $values)
	 * @method static mixed whereNotIn($column, $values, $boolean)
	 * @method static mixed orWhereNotIn($column, $values)
	 * @method static mixed whereIntegerInRaw($column, $values, $boolean, $not)
	 * @method static mixed orWhereIntegerInRaw($column, $values)
	 * @method static mixed whereIntegerNotInRaw($column, $values, $boolean)
	 * @method static mixed orWhereIntegerNotInRaw($column, $values)
	 * @method static mixed whereNull($columns, $boolean, $not)
	 * @method static mixed orWhereNull($column)
	 * @method static mixed whereNotNull($columns, $boolean)
	 * @method static mixed whereBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed whereBetweenColumns($column, array $values, $boolean, $not)
	 * @method static mixed orWhereBetween($column, iterable $values)
	 * @method static mixed orWhereBetweenColumns($column, array $values)
	 * @method static mixed whereNotBetween($column, iterable $values, $boolean)
	 * @method static mixed whereNotBetweenColumns($column, array $values, $boolean)
	 * @method static mixed orWhereNotBetween($column, iterable $values)
	 * @method static mixed orWhereNotBetweenColumns($column, array $values)
	 * @method static mixed whereValueBetween($value, array $columns, $boolean, $not)
	 * @method static mixed orWhereValueBetween($value, array $columns)
	 * @method static mixed whereValueNotBetween($value, array $columns, $boolean)
	 * @method static mixed orWhereValueNotBetween($value, array $columns)
	 * @method static mixed orWhereNotNull($column)
	 * @method static mixed whereDate($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDate($column, $operator, $value)
	 * @method static mixed whereTime($column, $operator, $value, $boolean)
	 * @method static mixed orWhereTime($column, $operator, $value)
	 * @method static mixed whereDay($column, $operator, $value, $boolean)
	 * @method static mixed orWhereDay($column, $operator, $value)
	 * @method static mixed whereMonth($column, $operator, $value, $boolean)
	 * @method static mixed orWhereMonth($column, $operator, $value)
	 * @method static mixed whereYear($column, $operator, $value, $boolean)
	 * @method static mixed orWhereYear($column, $operator, $value)
	 * @method static mixed addDateBasedWhere($type, $column, $operator, $value, $boolean)
	 * @method static mixed whereNested(Closure $callback, $boolean)
	 * @method static mixed forNestedWhere()
	 * @method static mixed addNestedWhereQuery($query, $boolean)
	 * @method static mixed whereSub($column, $operator, $callback, $boolean)
	 * @method static mixed whereExists($callback, $boolean, $not)
	 * @method static mixed orWhereExists($callback, $not)
	 * @method static mixed whereNotExists($callback, $boolean)
	 * @method static mixed orWhereNotExists($callback)
	 * @method static mixed addWhereExistsQuery(self $query, $boolean, $not)
	 * @method static mixed whereRowValues($columns, $operator, $values, $boolean)
	 * @method static mixed orWhereRowValues($columns, $operator, $values)
	 * @method static mixed whereJsonContains($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonContains($column, $value)
	 * @method static mixed whereJsonDoesntContain($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntContain($column, $value)
	 * @method static mixed whereJsonOverlaps($column, $value, $boolean, $not)
	 * @method static mixed orWhereJsonOverlaps($column, $value)
	 * @method static mixed whereJsonDoesntOverlap($column, $value, $boolean)
	 * @method static mixed orWhereJsonDoesntOverlap($column, $value)
	 * @method static mixed whereJsonContainsKey($column, $boolean, $not)
	 * @method static mixed orWhereJsonContainsKey($column)
	 * @method static mixed whereJsonDoesntContainKey($column, $boolean)
	 * @method static mixed orWhereJsonDoesntContainKey($column)
	 * @method static mixed whereJsonLength($column, $operator, $value, $boolean)
	 * @method static mixed orWhereJsonLength($column, $operator, $value)
	 * @method static mixed dynamicWhere($method, $parameters)
	 * @method static mixed addDynamic($segment, $connector, $parameters, $index)
	 * @method static mixed whereFullText($columns, $value, array $options, $boolean)
	 * @method static mixed orWhereFullText($columns, $value, array $options)
	 * @method static mixed whereAll($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAll($columns, $operator, $value)
	 * @method static mixed whereAny($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereAny($columns, $operator, $value)
	 * @method static mixed whereNone($columns, $operator, $value, $boolean)
	 * @method static mixed orWhereNone($columns, $operator, $value)
	 * @method static mixed groupBy($groups)
	 * @method static mixed groupByRaw($sql, array $bindings)
	 * @method static mixed having($column, $operator, $value, $boolean)
	 * @method static mixed orHaving($column, $operator, $value)
	 * @method static mixed havingNested(Closure $callback, $boolean)
	 * @method static mixed addNestedHavingQuery($query, $boolean)
	 * @method static mixed havingNull($columns, $boolean, $not)
	 * @method static mixed orHavingNull($column)
	 * @method static mixed havingNotNull($columns, $boolean)
	 * @method static mixed orHavingNotNull($column)
	 * @method static mixed havingBetween($column, iterable $values, $boolean, $not)
	 * @method static mixed havingRaw($sql, array $bindings, $boolean)
	 * @method static mixed orHavingRaw($sql, array $bindings)
	 * @method static mixed orderBy($column, $direction)
	 * @method static mixed orderByDesc($column)
	 * @method static mixed latest($column)
	 * @method static mixed oldest($column)
	 * @method static mixed inRandomOrder($seed)
	 * @method static mixed orderByRaw($sql, $bindings)
	 * @method static mixed skip($value)
	 * @method static mixed offset($value)
	 * @method static mixed take($value)
	 * @method static mixed limit($value)
	 * @method static mixed groupLimit($value, $column)
	 * @method static mixed forPage($page, $perPage)
	 * @method static mixed forPageBeforeId($perPage, $lastId, $column)
	 * @method static mixed forPageAfterId($perPage, $lastId, $column)
	 * @method static mixed reorder($column, $direction)
	 * @method static mixed reorderDesc($column)
	 * @method static mixed removeExistingOrdersFor($column)
	 * @method static mixed union($query, $all)
	 * @method static mixed unionAll($query)
	 * @method static mixed lock($value)
	 * @method static mixed lockForUpdate()
	 * @method static mixed sharedLock()
	 * @method static mixed beforeQuery(callable $callback)
	 * @method static mixed applyBeforeQueryCallbacks()
	 * @method static mixed afterQuery(Closure $callback)
	 * @method static mixed applyAfterQueryCallbacks($result)
	 * @method static mixed toSql()
	 * @method static mixed toRawSql()
	 * @method static mixed find($id, $columns)
	 * @method static mixed findOr($id, $columns, Closure $callback)
	 * @method static mixed value($column)
	 * @method static mixed rawValue(string $expression, array $bindings)
	 * @method static mixed soleValue($column)
	 * @method static mixed get($columns)
	 * @method static mixed runSelect()
	 * @method static mixed withoutGroupLimitKeys($items)
	 * @method static mixed paginate($perPage, $columns, $pageName, $page, $total)
	 * @method static mixed simplePaginate($perPage, $columns, $pageName, $page)
	 * @method static mixed cursorPaginate($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed ensureOrderForCursorPagination($shouldReverse)
	 * @method static mixed getCountForPagination($columns)
	 * @method static mixed runPaginationCountQuery($columns)
	 * @method static mixed cloneForPaginationCount()
	 * @method static mixed withoutSelectAliases(array $columns)
	 * @method static mixed cursor()
	 * @method static mixed enforceOrderBy()
	 * @method static mixed pluck($column, $key)
	 * @method static mixed stripTableForPluck($column)
	 * @method static mixed pluckFromObjectColumn($queryResult, $column, $key)
	 * @method static mixed pluckFromArrayColumn($queryResult, $column, $key)
	 * @method static mixed implode($column, $glue)
	 * @method static mixed exists()
	 * @method static mixed doesntExist()
	 * @method static mixed existsOr(Closure $callback)
	 * @method static mixed doesntExistOr(Closure $callback)
	 * @method static mixed count($columns)
	 * @method static mixed min($column)
	 * @method static mixed max($column)
	 * @method static mixed sum($column)
	 * @method static mixed avg($column)
	 * @method static mixed average($column)
	 * @method static mixed aggregate($function, $columns)
	 * @method static mixed numericAggregate($function, $columns)
	 * @method static mixed setAggregate($function, $columns)
	 * @method static mixed onceWithColumns($columns, $callback)
	 * @method static mixed insert(array $values)
	 * @method static mixed insertOrIgnore(array $values)
	 * @method static mixed insertGetId(array $values, $sequence)
	 * @method static mixed insertUsing(array $columns, $query)
	 * @method static mixed insertOrIgnoreUsing(array $columns, $query)
	 * @method static mixed update(array $values)
	 * @method static mixed updateFrom(array $values)
	 * @method static mixed updateOrInsert(array $attributes, callable|array $values)
	 * @method static mixed upsert(array $values, array|string $uniqueBy, array $update)
	 * @method static mixed increment($column, $amount, array $extra)
	 * @method static mixed incrementEach(array $columns, array $extra)
	 * @method static mixed decrement($column, $amount, array $extra)
	 * @method static mixed decrementEach(array $columns, array $extra)
	 * @method static mixed delete($id)
	 * @method static mixed truncate()
	 * @method static mixed newQuery()
	 * @method static mixed forSubQuery()
	 * @method static mixed getColumns()
	 * @method static mixed raw($value)
	 * @method static mixed getUnionBuilders()
	 * @method static mixed getLimit()
	 * @method static mixed getOffset()
	 * @method static mixed getBindings()
	 * @method static mixed getRawBindings()
	 * @method static mixed setBindings(array $bindings, $type)
	 * @method static mixed addBinding($value, $type)
	 * @method static mixed castBinding($value)
	 * @method static mixed mergeBindings(self $query)
	 * @method static mixed cleanBindings(array $bindings)
	 * @method static mixed flattenValue($value)
	 * @method static mixed defaultKeyName()
	 * @method static mixed getConnection()
	 * @method static mixed getProcessor()
	 * @method static mixed getGrammar()
	 * @method static mixed useWritePdo()
	 * @method static mixed isQueryable($value)
	 * @method static mixed clone()
	 * @method static mixed cloneWithout(array $properties)
	 * @method static mixed cloneWithoutBindings(array $except)
	 * @method static mixed dump($args)
	 * @method static mixed dumpRawSql()
	 * @method static mixed dd()
	 * @method static mixed ddRawSql()
	 * @method static mixed wherePast($columns)
	 * @method static mixed whereNowOrPast($columns)
	 * @method static mixed orWherePast($columns)
	 * @method static mixed orWhereNowOrPast($columns)
	 * @method static mixed whereFuture($columns)
	 * @method static mixed whereNowOrFuture($columns)
	 * @method static mixed orWhereFuture($columns)
	 * @method static mixed orWhereNowOrFuture($columns)
	 * @method static mixed wherePastOrFuture($columns, $operator, $boolean)
	 * @method static mixed whereToday($columns, $boolean)
	 * @method static mixed whereBeforeToday($columns)
	 * @method static mixed whereTodayOrBefore($columns)
	 * @method static mixed whereAfterToday($columns)
	 * @method static mixed whereTodayOrAfter($columns)
	 * @method static mixed orWhereToday($columns)
	 * @method static mixed orWhereBeforeToday($columns)
	 * @method static mixed orWhereTodayOrBefore($columns)
	 * @method static mixed orWhereAfterToday($columns)
	 * @method static mixed orWhereTodayOrAfter($columns)
	 * @method static mixed whereTodayBeforeOrAfter($columns, $operator, $boolean)
	 * @method static mixed chunk($count, callable $callback)
	 * @method static mixed chunkMap(callable $callback, $count)
	 * @method static mixed each(callable $callback, $count)
	 * @method static mixed chunkById($count, callable $callback, $column, $alias)
	 * @method static mixed chunkByIdDesc($count, callable $callback, $column, $alias)
	 * @method static mixed orderedChunkById($count, callable $callback, $column, $alias, $descending)
	 * @method static mixed eachById(callable $callback, $count, $column, $alias)
	 * @method static mixed lazy($chunkSize)
	 * @method static mixed lazyById($chunkSize, $column, $alias)
	 * @method static mixed lazyByIdDesc($chunkSize, $column, $alias)
	 * @method static mixed orderedLazyById($chunkSize, $column, $alias, $descending)
	 * @method static mixed first($columns)
	 * @method static mixed firstOrFail($columns, $message)
	 * @method static mixed sole($columns)
	 * @method static mixed paginateUsingCursor($perPage, $columns, $cursorName, $cursor)
	 * @method static mixed getOriginalColumnNameForCursorPagination($builder, string $parameter)
	 * @method static mixed paginator($items, $total, $perPage, $currentPage, $options)
	 * @method static mixed simplePaginator($items, $perPage, $currentPage, $options)
	 * @method static mixed cursorPaginator($items, $perPage, $cursor, $options)
	 * @method static mixed tap($callback)
	 * @method static mixed pipe($callback)
	 * @method static mixed when($value, callable $callback, callable $default)
	 * @method static mixed unless($value, callable $callback, callable $default)
	 * @method static mixed explain()
	 * @method static mixed forwardCallTo($object, $method, $parameters)
	 * @method static mixed forwardDecoratedCallTo($object, $method, $parameters)
	 * @method static mixed throwBadMethodCallException($method)
	 * @method static mixed macro($name, $macro)
	 * @method static mixed mixin($mixin, $replace)
	 * @method static mixed hasMacro($name)
	 * @method static mixed flushMacros()
	 * @method static mixed macroCall($method, $parameters)
	 * @mixin \Illuminate\Database\Query\Builder
	 */
	class VotingComment extends \Illuminate\Database\Eloquent\Model
	{
		//
	}

}